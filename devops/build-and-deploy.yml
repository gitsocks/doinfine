trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'
  paths:
    exclude:
      - devops

pool:
  vmImage: windows-latest

variables:
  - group: Doinfine

stages:
  - stage: deploy_to_preview
    displayName: üëÄ Deploy to Preview
    condition: eq(variables['Build.Reason'], 'PullRequest')
    jobs:
      - job: deploy_to_preview_job
        displayName: Deploy to Preview
        steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - script: npm i -g vercel
            displayName: Install Vercel CLI

          - powershell: |
              vercel deploy --token=$(VERCEL_TOKEN)
            displayName: Deploy to Vercel
            env:
              VERCEL_ORG_ID: $(VERCEL_ORG_ID)
              VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)

  - stage: deploy_to_dev
    displayName: üí™ Deploy to Dev
    condition: or(eq(variables['Build.Reason'], 'Manual'), and(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
    jobs:
      - job: deploy_to_dev_job
        displayName: Deploy to Dev
        steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - script: npm i -g vercel
            displayName: Install Vercel CLI

          - powershell: |
              $url="$(vercel deploy --token=$(VERCEL_TOKEN))"
              vercel alias set $url dev.doinfine.app --token=$(VERCEL_TOKEN)
            displayName: Deploy to Vercel
            env:
              VERCEL_ORG_ID: $(VERCEL_ORG_ID)
              VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)

  - stage: deploy_to_prod
    displayName: ‚≠ê Deploy to Production
    condition: and(eq(variables['Build.Reason'], 'IndividualCI'), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    jobs:
      - job: deploy_to_prod_job
        displayName: Deploy to Production
        steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - script: npm i -g vercel
            displayName: Install Vercel CLI

          - powershell: |
              vercel deploy --token=$(VERCEL_TOKEN) --prod
            displayName: Deploy to Vercel
            env:
              VERCEL_ORG_ID: $(VERCEL_ORG_ID)
              VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)
